legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat,aes(x =log(value/x) , y = ..density..))+
geom_histogram(fill = "cornsilk", colour = "grey60", size = .2) +
geom_density() +
#geom_density(aes(log(value/x),color=Method))
#geom_violin(aes(x="",y=log(value/x)))+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
geom_histogram(aes(x=log(value/x),color=Method),fill="white",position="identity",alpha=0,size=1.3)+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
geom_vline(aes(xintercept=0),color="black",linetype="dashed")+
theme_classic()+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(aes(x=Method,y=log(value/x)),alpha=0.3,position="identity")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
aes(x="",y=log(value/x),color=Method)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(alpha=0.3,position="identity")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
aes(x="",y=value/x,color=Method)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(alpha=0.3,position="identity")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
geom_histogram(aes(x=value/x,color=Method),fill="white",position="identity",alpha=0,size=1.3)+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
geom_vline(aes(xintercept=0),color="black",linetype="dashed")+
theme_classic()+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
aes(x="",y=log(value/x),color=Method)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(alpha=0.3,position="identity")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot(HCaccuracy.dat)+
aes(x="",y=log(value/x),color=Method)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(alpha=0.3,position="identity")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
HCquartfit=libfitcomp(Kset,q.vals.HC, compHC.q,d=4)
list.save(HCquartfit,"HCquartlm.RData")
HCquarterfit=list.load("HCquarterlm.RData")
HCquartfit=list.load("HCquartlm.RData")
Kset=c(30,100,500,1000,2000)
HCvalues=c()
HClib_values=c()
HClinearlib_value=c()
HCquadraticlib_value=c()
HCres_libs=list.load("HCres_libs.RData")
HCres_mod=list.load("HCres_mod.RData")
HCquadraticfit=list.load("HCquadraticlm.RData")
HClinearfit=list.load("HClinearlm.RData")
HCquartfit=list.load("HCquartlm.RData")
HCquartlib_value=c()
for (i in 1:5) {
temp.ind=which(-log10(HCres_libs[[5]][[i]][[2]])<12)[1:100]
temp.val=HCres_mod[[5]][[i]][[2]][temp.ind]
#temp.val=sapply(temp.val,function(x) ifelse(x<=0,10^(-13),x))
HCvalues=c(HCvalues,temp.val)
HClib_values=c(HClib_values,HCres_libs[[5]][[i]][[2]][temp.ind])
HClinearlib_value=c(HClinearlib_value,HClinearfit[[5]][temp.ind])
HCquadraticlib_value=c(HCquadraticlib_value,HCquadraticfit[[5]][temp.ind])
HCquartlib_value=c(HCquartlib_value,HCquartfit[[5]][temp.ind])
}
HCaccuracy.dat=data.frame(x=rep(HCvalues,4),value=c(HClib_values,HClinearlib_value,HCquadraticlib_value,HCquartlib_value),
K=rep(rep(Kset,each=100),4),Method=rep(c("cubic spline","linear regression","quadratic regression","Fourth-degree regression")))
ggplot(HCaccuracy.dat)+
aes(x="",y=log(value/x),color=Method)+
#geom_density(aes(log(value/x),color=Method))
geom_violin(alpha=0.3,position="identity")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
scale_color_manual(values=c("red", "#E69F00", "#56B4E9","green"))+
labs(x="log (interpolation/truth)", y = "Count")+
theme_classic()+
#facet_grid(~Method )+
ggtitle("(D)")+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="",y=log(HClib_values/HCvalues)))
ggplot()+
geom_violin(aes(x="",y=log(HClinearlib_value/HCvalues)))
ggplot()+
geom_violin(aes(x="cubic spline",y=log(HClib_values/HCvalues)))+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="cubic spline",y=log(HClib_values/HCvalues)),color="black",fill="red")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="linear regression",y=log(HClinearlib_value/HCvalues)),fill="#E69F00")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="quadratic regression",y=log(HCquadraticlib_value/HCvalues)),fill="#56B4E9")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="forth-degree regression",y=log(HCquartlib_value/HCvalues)),fill="green")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
Kset=c(30,100,500,1000,2000)
HCvalues=c()
HClib_values=c()
HClinearlib_value=c()
HCquadraticlib_value=c()
HCquartlib_value=c()
HCres_libs=list.load("HCres_libs.RData")
HCres_mod=list.load("HCres_mod.RData")
HCquadraticfit=list.load("HCquadraticfit.RData")
HClinearfit=list.load("HClinearfit.RData")
HCquartfit=list.load("HCquartlm.RData")
for (i in 1:5) {
temp.ind=which(-log10(HCres_libs[[5]][[i]][[2]])<12)[1:100]
temp.val=HCres_mod[[5]][[i]][[2]][temp.ind]
#temp.val=sapply(temp.val,function(x) ifelse(x<=0,10^(-13),x))
HCvalues=c(HCvalues,temp.val)
HClib_values=c(HClib_values,HCres_libs[[5]][[i]][[2]][temp.ind])
HClinearlib_value=c(HClinearlib_value,HClinearfit[[5]][temp.ind])
HCquadraticlib_value=c(HCquadraticlib_value,HCquadraticfit[[5]][temp.ind])
HCquartlib_value=c(HCquartlib_value,HCquartfit[[5]][temp.ind])
}
ggplot()+
geom_violin(aes(x="quadratic regression",y=log(HCquadraticlib_value/HCvalues)),fill="#56B4E9")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="linear regression",y=log(HClinearlib_value/HCvalues)),fill="#E69F00")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
ggplot()+
geom_violin(aes(x="cubic spline",y=log(HClib_values/HCvalues)),color="black",fill="red")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
Kset=c(30,100,500,1000,2000)
HCvalues=c()
HClib_values=c()
HClinearlib_value=c()
HCquadraticlib_value=c()
HCquartlib_value=c()
HCres_libs=list.load("HCres_libs.RData")
HCres_mod=list.load("HCres_mod.RData")
HCquadraticfit=list.load("HCquadraticfit.RData")
HClinearfit=list.load("HClinearfit.RData")
HCquartfit=list.load("HCquartlm.RData")
for (i in 1:5) {
temp.ind=which(-log10(HCres_libs[[5]][[i]][[2]])<12)[1:100]
temp.val=HCres_mod[[5]][[i]][[2]][temp.ind]
#temp.val=sapply(temp.val,function(x) ifelse(x<=0,10^(-13),x))
HCvalues=c(HCvalues,temp.val)
HClib_values=c(HClib_values,HCres_libs[[5]][[i]][[2]][temp.ind])
HClinearlib_value=c(HClinearlib_value,HClinearfit[[5]][temp.ind])
HCquadraticlib_value=c(HCquadraticlib_value,HCquadraticfit[[5]][temp.ind])
HCquartlib_value=c(HCquartlib_value,HCquartfit[[5]][temp.ind])
}
cubic.plot=ggplot()+
geom_violin(aes(x="cubic spline",y=log(HClib_values/HCvalues)),color="black",fill="red")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
linear.plot=ggplot()+
geom_violin(aes(x="linear regression",y=log(HClinearlib_value/HCvalues)),fill="#E69F00")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
quadratic.plot=ggplot()+
geom_violin(aes(x="quadratic regression",y=log(HCquadraticlib_value/HCvalues)),fill="#56B4E9")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
plot_grid(linear.plot,quadratic.plot,quadratic.plot,forthpoly.plot,nrow = 1)
forthpoly.plot=ggplot()+
geom_violin(aes(x="forth-degree regression",y=log(HCquartlib_value/HCvalues)),fill="green")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
plot_grid(linear.plot,quadratic.plot,quadratic.plot,forthpoly.plot,nrow = 1)
plot_grid(linear.plot,quadratic.plot,cubic.plot,forthpoly.plot,nrow = 1)
cubic.plot=ggplot()+
geom_violin(aes(x="Cubic spline",y=log(HClib_values/HCvalues)),color="black",fill="red")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
linear.plot=ggplot()+
geom_violin(aes(x="Linear regression",y=log(HClinearlib_value/HCvalues)),fill="#E69F00")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
quadratic.plot=ggplot()+
geom_violin(aes(x="Quadratic regression",y=log(HCquadraticlib_value/HCvalues)),fill="#56B4E9")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
forthpoly.plot=ggplot()+
geom_violin(aes(x="Bi-quadratic regression",y=log(HCquartlib_value/HCvalues)),fill="green")+
labs(y="log (interpolation/truth)", x= "")+
geom_hline(aes(yintercept=0),color="black",linetype="dashed")+
theme_classic()+
theme(legend.text.align = 0,
legend.position ="bottom",
legend.text=element_text(size=8,face = "bold"),
legend.background = element_rect(fill='transparent'),
legend.title = element_text(face="bold",size=10),
plot.title = element_text(hjust = 0,size = 14, face = "bold"),
text = element_text(size = 6),
axis.title = element_text(face="bold",size=10),
axis.text = element_text(face="bold",size=8))
pdf("FinalFigures/AppendFigureIV.pdf")
plot_grid(linear.plot,quadratic.plot,cubic.plot,forthpoly.plot,nrow = 2)
dev.off()
setwd("~/OneDrive - University of Pittsburgh/Combine_p-value/HCp")
library(devtools); library(roxygen2)
use_r("hybrid")
use_r("LS")
use_r("UFI")
use_r("UFIp")
100%%25
100%25
100%%102
1000%%100
1000/100
10%%102
1000/300
ceiling
ceiling(1000/300)
use_r("ISgrad")
use_r("HCstat")
document()
load_all()
check()
hybrid(q=10, K=10, k0=1,k1=NA, thre=FALSE,N=10^6)
hybrid(q=100, K=10, k0=1,k1=NA, thre=FALSE,N=10^6)
hybrid(q=10, K=10, k0=1,k1=NA, thre=TRUE,N=10^6)
hybrid(q=10, K=400, k0=1,k1=NA, thre=TRUE,N=10^6)
?hybrid
use_r(ufi.q)
use_r(UFIq)
use_r("UFIq")
document()
?ufi.p
?hybrid
load_all()
check()
load_all()
check()
build()
use_r("hybridSpec")
document()
check()
pset=runif(2001)
hcstat <-HCstat(pset,k0=1,k1=NA, thre=FALSE)
hybridSpec(q=hcstat, K=2001, flibs=HC_flibs,N=10^6)
hcstat
build()
